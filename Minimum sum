Given an array arr[] such that each element 
is in the range [0 - 9], find the minimum possible
sum of two numbers formed using the elements of the array. All digits in the given array must be used to form the two numbers. Return a string without leading zeroes.
Examples :

Input: arr[] = [6, 8, 4, 5, 2, 3]
Output: 604
Explanation: The minimum sum is formed by numbers 358 and 246.
Input: arr[] = [5, 3, 0, 7, 4]
Output: 82
Explanation: The minimum sum is formed by numbers 35 and 047.
Input: arr[] = [9, 4]
Output: 13
Explanation: The minimum sum is formed by numbers 9 and 4.


ANSWER :-

class Solution {
    String minSum(int[] arr) {
        StringBuilder sol = new StringBuilder();
        Arrays.sort(arr);
        
        int i = 0;
        int j = arr.length - 1;
        
        while (arr[i] == 0) {
            i++;
        }
        
        int carry = 0;
        for (; j - 1 >= i; j -= 2) {
            int sum = arr[j] + arr[j - 1] + carry;
            carry = sum / 10;
            sum = sum % 10;
            sol.append((char)(sum + '0'));
        }
        
        int sum = 0;
        if (carry > 0) sum += carry;
        if (j >= i) sum += arr[j];
        while (sum > 0) {
            sol.append((char)((sum % 10) + '0'));
            sum /= 10;
        }
        return sol.reverse().toString();
    }
}
