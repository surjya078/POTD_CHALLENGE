Given the head of a singly linked list, the task is to rotate the linked list anti-clockwise by k nodes, i.e., left-shift the linked list by k nodes, where k is a given positive integer smaller than or equal to length of the linked list.

Examples:

Input: linkedlist: 2->4->7->8->9 , k = 3
Output: 8->9->2->4->7
Explanation:
Rotate 1: 4 -> 7 -> 8 -> 9 -> 2
Rotate 2: 7 -> 8 -> 9 -> 2 -> 4
Rotate 3: 8 -> 9 -> 2 -> 4 -> 7

Input: linkedlist: 1->2->3->4->5->6->7->8 , k = 4
Output: 5->6->7->8->1->2->3->4


ANSWER :-


class Solution {
    // Function to rotate a linked list.
       public Node rotate(Node head, int k) {
        
        Node last=head;
        int nodes=0;
        
        while(last.next!=null)
        {
          last=last.next;
          nodes++;
        }
        nodes++;
        
        if(nodes==k)
            return head;
            
        while(k-->0)
        {
            last.next=head;
            last=last.next;
            head=head.next;
        }
        
        last.next=null;
        
        return head;
        
    }
}
