The cost of stock on each day is given in an array price[]. Each day you may decide to either buy or sell the stock
at price[i], you can even buy and sell the stock on the same day. Find the maximum profit that you can get.

Note: A stock can only be sold if it has been bought previously and multiple stocks cannot be held on any given day.

Examples:

Input: prices[] = [100, 180, 260, 310, 40, 535, 695]
Output: 865
Explanation: Buy the stock on day 0 and sell it on day 3 => 310 – 100 = 210. Buy the stock on day 4 and sell it on day6 => 695 – 40 = 655.
Maximum Profit = 210 + 655 = 865.

Input: prices[] = [4, 2, 2, 2, 4]
Output: 2
Explanation: Buy the stock on day 3 and sell it on day 4 => 4 – 2 = 2.
Maximum Profit = 2.


ANSWER :-

class Solution {
    public int maximumProfit(int prices[]) {
        // code here
        //as soon as i get a dip sell it on previous of current day
        int n = prices.length;
        int totalP = 0;
        int buy = 0;
        for(int i=0;i<n;i++){
            if(i == 0){
                buy = prices[i];
            }
            else if(prices[i] < prices[i-1]){
                //this is dip
                totalP += prices[i-1] - buy;
                
                buy = prices[i];
            }
        }
        
        totalP += prices[n-1] - buy;
        
        return totalP;
    }
}
