Given an integer n, find the square root of n. If n is not a perfect square, then return the floor value.

Floor value of any number is the greatest Integer which is less than or equal to that number

Examples:

Input: n = 5
Output: 2
Explanation: Since, 5 is not a perfect square, floor of square_root of 5 is 2.
Input: n = 4
Output: 2
Explanation: Since, 4 is a perfect square, so its square root is 2.

ANSWER :-

long floorSqrt(long n) {

       // Method 1:
        
       // Use Two Pointer Approach
        long lo = 1;
        long hi = n;
        long ans = 0;
        
        while(hi >= lo){
            if(lo * lo <= n){
                ans = lo;
                lo++;
            }else{
                hi--;
            }
        }
        return ans;

        
        // Method 2:
        
        // Binary Search Technique
        // long hi = n;
        // long lo = 0;
        // long ans = 1;
        
        // while(lo <= hi){
        //     long mid = (hi + lo) / 2;
        //     if(mid * mid <= n){
        //         ans = mid;
        //         lo = mid + 1;
        //     }else{
        //         hi = mid - 1;
        //     }
        // }
        // return ans;
         
        
        //Method 3:
        
        // Simple Math Function Use
        //return (long) Math.sqrt(n);
    
    }
