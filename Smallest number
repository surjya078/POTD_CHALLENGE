Given two integers s and d. The task is to find the smallest number such that the sum of its digits is s and the number of digits in the number are d. Return a string that is the smallest possible number. If it is not possible then return -1.

Examples:

Input: s = 9, d = 2
Output: 18 
Explanation: 18 is the smallest number possible with the sum of digits = 9 and total digits = 2.
Input: s = 20, d = 3 
Output: 299 
Explanation: 299 is the smallest number possible with the sum of digits = 20 and total digits = 3.

ANSWER:-


class Solution {
    public int sumOfDigits(int n){
        int sum = 0;
        
        while (n > 0){
            sum += n % 10;
            n = n / 10;
        }
        
        return sum;
    }
    
    public String smallestNumber(int s, int d) {
        if (s > 9 * d || s < 1) {
            return "-1";
        }
        
        int initialValue = 1 * (int)Math.pow(10, d - 1);
        while (initialValue <  1 * Math.pow(10, d)) {
            if (sumOfDigits(initialValue) == s) {
                return Integer.toString(initialValue);
            }
            initialValue += 1;
        }
        
        return "-1";
    }
}
