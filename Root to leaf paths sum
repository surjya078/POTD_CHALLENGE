Given a binary tree, where every node value is a number. Find the sum of all the numbers that are formed from root to leaf paths. The formation of the numbers would be like 10*parent + current (see the examples for more clarification).

Examples:

Input:      

Output: 13997
Explanation : There are 4 leaves, resulting in leaf path of 632, 6357, 6354, 654 sums to 13997.
Input:    

Output: 2630
Explanation: There are 3 leaves, resulting in leaf path of 1240, 1260, 130 sums to 2630.
Input:    
           1
          /
         2                    
Output: 12
Explanation: There is 1 leaf, resulting in leaf path of 12.


ANSWER :-

class Solution {
    static int totalCost = 0;
    
    public static void explorePaths(Node root, int currCost) {
        currCost = (currCost * 10) + root.data;
        if (root.right == null && root.left == null) {
            totalCost += currCost;
            return;
        }
        if (root.left != null) explorePaths(root.left, currCost);
        if (root.right != null) explorePaths(root.right, currCost);
    }
    
    public static int treePathsSum(Node root) {
        totalCost = 0;
        explorePaths(root, 0);
        return totalCost;
    }
}
