Given an array arr[] with repeated elements, the task is to find the maximum distance between two occurrences of an element.

Note: You may assume that every input array has repetitions.

Examples:

Input: arr = [1, 1, 2, 2, 2, 1]
Output: 5
Explanation: distance for 1 is: 5-0 = 5, distance for 2 is : 4-2 = 2, So max distance is 5.


Input: arr = [3, 2, 1, 2, 1, 4, 5, 8, 6, 7, 4, 2]
Output: 10
Explanation: maximum distance for 2 is 11-1 = 10, maximum distance for 1 is 4-2 = 2 ,maximum distance for 4 is 10-5 = 5, So max distance is 10.


ANSWER :-


class Solution {
    public int maxDistance(int[] arr) {
        Hashtable<Integer, Integer> firstOccurence = new Hashtable<>();
        int maxDifference = 0;
        
        for (int i = 0; i < arr.length; i++) {
            if (firstOccurence.containsKey(arr[i])) {
                maxDifference = Math.max(maxDifference, i - firstOccurence.get(arr[i]));
            } else {
                firstOccurence.put(arr[i], i);
            }
        }
        
        return maxDifference;
    }
}

