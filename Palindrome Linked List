Given a singly linked list of integers. The task is to check if the given linked list is palindrome or not.

Examples:

Input: LinkedList: 1->2->1->1->2->1
Output: true
Explanation: The given linked list is 1->2->1->1->2->1 , which is a palindrome and Hence, the output is true.

   1 -> 2 -> 1
             |
             1 -> 2-> 1

Input: LinkedList: 1->2->3->4
Output: false
Explanation: The given linked list is 1->2->3->4, which is not a palindrome and Hence, the output is false.

1 -> 2 -> 3 -> 4


ANSWER :-

/* Structure of class Node is
class Node
{
    int data;
    Node next;

    Node(int d)
    {
        data = d;
        next = null;
    }
}*/

class Solution {
    // Function to check whether the list is palindrome.
    Node root;
    boolean isPalindrome(Node head) {
        this.root=head;
        return find(head);
    }
    boolean find(Node head){
        if(head==null)return true;
        boolean f=find(head.next);
        if(head.data!=root.data)return false;
        root=root.next;
        return f;
    }
}
