Given an array arr[] denoting heights of N towers and a positive integer K.

For each tower, you must perform exactly one of the following operations exactly once.

Increase the height of the tower by K
Decrease the height of the tower by K
Find out the minimum possible difference between the height of the shortest and tallest towers after you have modified each tower.

You can find a slight modification of the problem here.
Note: It is compulsory to increase or decrease the height by K for each tower. After the operation, the resultant array should not contain any negative integers.

Examples :

Input: k = 2, arr[] = {1, 5, 8, 10}
Output: 5
Explanation: The array can be modified as {1+k, 5-k, 8-k, 10-k} = {3, 3, 6, 8}.The difference between the largest and the smallest is 8-3 = 5.
Input: k = 3, arr[] = {3, 9, 12, 16, 20}
Output: 11
Explanation: The array can be modified as {3+k, 9+k, 12-k, 16-k, 20-k} -> {6, 12, 9, 13, 17}.The difference between the largest and the smallest is 17-6 = 11. 


ANSWER :-

class Solution {
    int getMinDiff(int[] arr, int k) {
        // code here
         Arrays.sort(arr);
        
        int n= arr.length,mini;
        mini = arr[n-1]-arr[0];
        
        if (Math.abs((arr[n-1]-k)-(arr[0]+k))>=mini){
            return mini;
            
                    }
        // mini = Math.abs((arr[n-1]-k)-(arr[0]+k));
        int low,high;
        low = Math.min((arr[n-1]-k),(arr[0]+k));
        high = Math.max((arr[n-1]-k),(arr[0]+k));
        // 
        
        for (int i=1;i<n-1;i++){
            if (!((arr[i]+k<=high) || (arr[i]-k>=low)) ){
                // System.out.println(arr[i]);
                
                if ((arr[i]+k-low)<(high-(arr[i]-k))){
                    high = arr[i]+k;
                }
                else{
                    low = arr[i]-k;
                }
            }
            
        }
        // System.out.println(mini+" "+low+" "+high);
        
        return Math.min(mini,high-low);
    }
}
