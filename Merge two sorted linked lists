Given the head of two sorted linked lists consisting of nodes respectively. The task is to merge both lists and return the head of the sorted merged list.

Examples:

Input: head1 = 5 -> 10 -> 15 -> 40, head2 = 2 -> 3 -> 20
Output: 2 -> 3 -> 5 -> 10 -> 15 -> 20 -> 40
Explanation:

Input: head1 = 1 -> 1, head2 = 2 -> 4
Output: 1 -> 1 -> 2 -> 4
Explanation:


ANSWER :-

class Solution {
    Node sortedMerge(Node head1, Node head2) {
       Node temp1=head1;
       Node temp2=head2;
       Node head=new Node(100);
       Node temp=head;
       
       while(temp1!=null && temp2!=null)
       {
           if(temp1.data<temp2.data){
               Node a=new Node(temp1.data);
               temp.next=a;
               temp=a;
               temp1=temp1.next;
           }
           else{
               Node a=new Node(temp2.data);
               temp.next=a;
               temp=a;
               temp2=temp2.next;
           }
       }
       
       if(temp1==null){
           temp.next=temp2;
       }
       else{
           temp.next=temp1;
       }
       return head.next;
    }
}
